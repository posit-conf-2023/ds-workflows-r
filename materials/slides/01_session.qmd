---
title: "Session 1"
title-slide-attributes: 
  data-background-color: white
  data-background-image: _extensions/positconfslides/assets/backgrounds/content2-light.svg
  data-background-size: contain
format:
  positconfslides-revealjs: 
    chalkboard: true
    slide-number: c/t
    footer: "[http://pconf23-workflows.com/](http://pconf23-workflows.com/)"
    code-copy: true
    center-title-slide: false
    code-link: true
    code-overflow: wrap
    highlight-style: a11y
    width: "1600"
    height: "900"
    filters:
      - positconfslides
execute: 
  eval: true
  echo: true
  cache: true
---


## Workshop approach

We will use an [**end-to-end fictional project**]{.fuchsia} to demonstrate workflows and best practices using [**open source packages**]{.teal} and [**Posit professional tools**]{.teal}.

:::{.fragment}

<h2><br> Conventions </h2>

|                                               |                                                                            |
|-----------------------------------------------|----------------------------------------------------------------------------|
| üß∞                                            | Add this to your toolbox.                                                  |
| üì£                                            | I will stand on my soapbox and profess this until I am blue in the face.   |
| {{< bi sign-turn-right-fill color=orange >}}  | Detour warning. We could get really into this, but there's not time today. |
: {tbl-colwidths="[5,95]"}

:::





## About the Project

This workshop will use data from the City of Chicago Open Data Portal: <https://data.cityofchicago.org>.

::: smaller
1.  üçï Food inspections: [https://data.cityofchicago.org/Health-Human-Services/Food-Inspections/4ijn-s7e5](https://data.cityofchicago.org/Health-Human-Services/Food-Inspections/4ijn-s7e5){.smaller}

```{r}
#| echo: false
head(pins::pin_read(pins::board_connect(), "katie.masiello/inspections_raw_test"),5) |> 
  dplyr::select(dba_name, license_number, facility_type, risk, address, results, violations) |> 
  dplyr::mutate(violations=stringr::str_trunc(violations,30))|> gt::gt()
```

2.  üìí Business licenses: [https://data.cityofchicago.org/Community-Economic-Development/Business-Licenses/r5kz-chrr](https://data.cityofchicago.org/Community-Economic-Development/Business-Licenses/r5kz-chrr){.smaller}

```{r}
#| echo: false
head(pins::pin_read(pins::board_connect(), "katie.masiello/bus_data_raw_test"),5) |>
  dplyr::select(license_number, doing_business_as_name, address, license_description, license_term_expiration_date) |> gt::gt()
```
:::

## Project Objective

-   Provide users with a self-service tool that predicts the likelihood of a facility failing their next inspection

<h2><br>Project Requirements</h2>

-   ü§ñ Automate the pipeline
-   ‚ö†Ô∏è Receive alerts if there are issues in the pipeline
-   üîÑ Project is easy to maintain and iterate upon
-   {{< bi share color=#2D8400 >}} Work is reusable by other teams, even if they don't use R (Lookin' at you {{< fa brands python >}})

##  {.brackets-dark}

::: section-title-dark
Let's Get Started!
:::

## First Questions {.brackets-light}

::: incremental
-   What is this data?
-   Where should I put it?
-   How do I get data updates?
:::

:::{.fragment}
:::{.center}
<h2> <br>**Activity Time!**</h2>
:::

:::{.callout-note icon=false}
## Activity
üëâ Open the file `materials/activities/activity-00_raw_data_exploration.qmd`

You can render the document, but we recommend you interact run each code chunk as you work through it.
:::
:::


## What is this Data?


Our first introduction to `pointblank`

::: columns
::: {.column width="15%"}
![](https://github.com/rstudio/pointblank/raw/main/man/figures/logo.svg){style="padding-right: 15px;"}
:::

::: {.column width="75%"}
<br>`pointblank` provides data quality assessment and metadata reporting for data frames and database tables. <https://github.com/rstudio/pointblank>
:::
:::


üß∞ The `pointblank::scan_data()` function provides a HTML report of the input data to help you understand your data. 

## Sample data scan

```r
pointblank::scan_data(palmerpenguins::penguins)
```
<br>


<iframe src="slide_resources/scan_penguins.html" width=100% height="650"></iframe>
 
## Where should I put the data?

:::{.fragment}
üì£ Production data belongs in a database.
:::
<!-- TODO: Add a bp about efficient queries -->
:::{.fragment}
:::{.callout-tip icon=false}
## {{< bi sign-turn-right-fill color=orange >}} Best practices in working with databases

<https://solutions.posit.co/connections/db/> 

- `odbc` is an R package that provides a generic `DBI`-compliant interface to the ODBC driver installed on your system
- `RPostgres`, `RMariaDB`, `RSQLite`, and `bigrquery` are database-specific R packages that implement the drivers themselves. In many cases, they are more performant (especially in writing data) and may have more translations available for query types
- These will make the same connection
  ```r
  con <- DBI::dbConnect(RPostgres::postgres(), ...)
  con <- DBI::dbConnect(odbc::odbc(), driver = ‚ÄúPostgres‚Äù, ...)
  ```
- use `dplyr` to query the database table in the same manner you would a local data frame

Specific resources:

::::{columns}

:::{.column width=40%}
- [Connect to a database](https://solutions.posit.co/connections/db/getting-started/connect-to-database/)
- [Query a database table](https://solutions.posit.co/connections/db/getting-started/database-queries/)
:::

:::{.column width=60%}

- [Securing credentials](https://solutions.posit.co/connections/db/best-practices/managing-credentials/)
- [Making scripts portable](https://solutions.posit.co/connections/db/best-practices/portable-code/)
:::
::::

:::

:::

## How do I get data updates?

:::{.fragment}
üß∞ Deploy and schedule your notebook on Posit Connect
:::

:::{.fragment}
:::{.center}
<h2> <br>**Activity Time!**</h2>
:::

:::{.callout-note icon=false}
## Activity
üëâ Open the file `materials/activities/activity-01_publish_and_schedule_data_pull.Rmd`

:::
:::

## Deployment Methods

1. Push-button ![](slide_resources/publishIcon_2x.png){height="50" style="vertical-align:middle"} 
2. Git-backed
3. Programmatic 

üì£ Push-button is good for rapid prototyping. Beyond that, you really should be using [**git-backed or programmatic deployment via CI/CD pipeline**]{.fuchsia} to keep your code in sync with your deployment. 

## üò± Did your deployment fail?

:::::{.columns}

::::{.column width=50%}

:::{.fragment}
<br>
Why?
:::

:::{.fragment}
<br><br>
ü§¶Ô∏è Environment variables!

:::

::::

::::{.column width=50%}

:::{.fragment}
![](slide_resources/vars-panel-settings.png){height="700"}
:::
::::
:::::


## Scheduling

::::{.columns}

:::{.column width=30%}
![](slide_resources/scheduling.png){height="700"}
:::

:::{.column width=70%}

:::{.fragment}
<h3>What's the benefit of having this as a standalone scheduled job?</h3>
:::

:::{.fragment}
<h3><br>üì£ Breaking up the pieces of your project into uni-taskers keeps your end product lightweight, and your elements are easier to maintain and reuse.</h3>
:::

:::

::::

##  {.brackets-dark}

::: section-title-dark
Now what?
:::

## Next Questions {.brackets-light}

::: incremental
-   How can I ensure this is quality data? ü§î
-   How will I know when it's not?

:::


## How can I ensure this is quality data?

Pointblank

pointblank diagrams. 

detour items: multi-agent, data dictionary

## How will I know if my data has issues?

Blastula

:::{.fragment}
:::{.center}
<h2> <br>**Activity Time!**</h2>
:::

:::{.callout-note icon=false}
## Activity
üëâ Open the file `materials/activities/activity-02`


:::
:::
