---
format:
  positconfslides-revealjs: 
    chalkboard: true
    slide-number: c/t
    footer: "[Data Science Workflows with Posit Tools - R Focus](https://katie.quarto.pub/ds-workflows-r/)"
    code-copy: true
    center-title-slide: false
    code-link: true
    code-overflow: wrap
    code-annotations: hover
    highlight-style: a11y
    width: "1600"
    height: "900"
    filters:
      - positconfslides
execute: 
  eval: false
  echo: true
---

## Tidymodels and Vetiver {.toc-light}

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/tidymodels.png?raw=true){.absolute top="200" left="50" width="260"} ![](https://github.com/rstudio/hex-stickers/blob/main/PNG/vetiver.png?raw=true){.absolute top="200" left="310" width="260"}

## Agenda

-   Goal of Food inspections Model

-   Tidymodels

    -   Assignment - Create a tidymodel

-   Vetiver

    -   Pins and Plumber
    -   Assignment - Deploy and monitor your tidymodel

-   Food inspection model (xgboost)

    -   Assignment - Interacting with the model

## {{< bi sign-turn-right-fill color=orange >}} Disclaimer

<br>

::: {style="text-align: center; font-size: 200%; color: #EE6331"}
THIS IS NOT A MODELING WORKSHOP!
:::

. . .

<br>

... but modeling is still super cool ðŸ˜Ž !

## Review

![](slide_resources/workflow_diagram.jpg){fig-align="center"}

## What's the Goal?

::: columns
::: {.column width="50%"}
![](slide_resources/data_model_meme.jpg){width="710"}
:::

::: {.column width="50%"}
**What we have:**

-   A ***beautiful - tidy - validated*** dataset

    -   Historical food inspection results

    -   Business information

<br>

**What do we want:**

-   A <font color="#9A4665"> MODEL </font> that can *predict if an establishment will fail an inspection*
:::
:::

## Where are we going

![](slide_resources/workflow_diagram.jpg){fig-align="center"}

## Review - Chicago Food Inspections Project

![](slide_resources/LOGO-CHICAGO-horizontal.png){.absolute top="10" right="50" width="300"}

[What is this project?]{.fuchsia}

::: columns
::: {.column width="70%"}
::: {.fragment fragment-index="1"}
-   Over **15,000** food establishments across the City of Chicago
:::

::: {.fragment fragment-index="2"}
-   Only a handful of food inspectors currently employed
:::

::: {.fragment fragment-index="3"}
::: {.callout-caution icon="false"}
## The Question

Can we help inspectors identify which establishments are at highest risk for failing an inspection?
:::
:::

::: {.fragment fragment-index="4"}
::: {.callout-tip icon="false"}
## The Answer

Use the historical (validated) inspections data to create a model that will predict fail likelihood!
:::
:::
:::

::: {.column width="30%"}
::: {.fragment fragment-index="1"}
![](https://images.unsplash.com/photo-1523053030199-19a46754261d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cmVzdGF1cmFudCUyMGNoaWNhZ298ZW58MHx8MHx8fDA%3D&auto=format&fit=crop&w=500&q=60)
:::

::: {.fragment fragment-index="2"}
![](https://plus.unsplash.com/premium_photo-1661937185702-e6f2a55096ff?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8Zm9vZCUyMGluc3BlY3RvcnxlbnwwfHwwfHx8MA%3D%3D&auto=format&fit=crop&w=500&q=60)
:::
:::
:::

## Introduction to Tidymodels {.content-light}

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/tidymodels.png?raw=true){.absolute top="200" right="50" width="260"}

<br>

âœ‹ If you have used `tidymodels` before?

## Introduction to Tidymodels {.content-light}

<br>

Steps to create (most) models:

::: incremental
1.  Data - preprocessing?
2.  Create a formula - what does the model do?
3.  Define your model type - Linear regression, decision tree, xgboost, etc?
4.  Train
5.  Test
6.  Predict
:::

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/recipes.png?raw=true){.absolute top="100" right="300" width="150"} ![](https://github.com/rstudio/hex-stickers/blob/main/PNG/parsnip.png?raw=true){.absolute top="100" right="450" width="150"} ![](https://github.com/rstudio/hex-stickers/blob/main/PNG/workflows.png?raw=true){.absolute top="100" right="150" width="150"}

## Introduction to Tidymodels {.content-light}

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/recipes.png?raw=true){.absolute top="10" right="690" width="60"} ![](https://github.com/rstudio/hex-stickers/blob/main/PNG/parsnip.png?raw=true){.absolute top="10" right="750" width="60"} ![](https://github.com/rstudio/hex-stickers/blob/main/PNG/workflows.png?raw=true){.absolute top="10" right="630" width="60"}

```{r}
#| code-line-numbers: "3-5|7-8|10-11|13-14"

library(tidymodels)

# Create Recipe
model_recipe <- recipes::recipe(what-to-predict ~ data-features, 
                                data = your-data)

# Define model using parsnip (e.x. linear regression)
model_type <- parsnip::linear_reg()

# Combine the two to create a workflow
model_wflow <- workflows::workflow(model_recipe, model_type)

# Fit workflow to data using parsnip
model_fit <- parsnip::fit(model_wflow, your-data)
```

## Introduction to Tidymodels {.content-light}

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/recipes.png?raw=true){.absolute top="10" right="690" width="60"} ![](https://github.com/rstudio/hex-stickers/blob/main/PNG/parsnip.png?raw=true){.absolute top="10" right="750" width="60"} ![](https://github.com/rstudio/hex-stickers/blob/main/PNG/workflows.png?raw=true){.absolute top="10" right="630" width="60"}

::: center
<h2><br>**Activity Time!**</h2>
:::

::: {.callout-note icon="false"}
## Activity

ðŸ‘‰ Open the file `materials/activities/activity-05_TidymodelsVetiver.qmd`

**Complete Task 1 only!**
:::

::: callout-important
We will be using the `diamonds` dataset for this activity!
:::

## We have a model...now what ðŸ¤· ?

<br>

We have two questions:

1.  How can we **save** our model so others can use it?
2.  How can we **serve** our model so others can interact with it?

::: {.fragment .fade-up}
![](https://github.com/rstudio/hex-stickers/blob/main/PNG/vetiver.png?raw=true){fig-align="center" width="309"}
:::

## Vetiver

![](https://vetiver.rstudio.com/images/ml_ops_cycle.png){.absolute width="1000" top="70" right="300"}

![](https://github.com/rstudio/pointblank/raw/main/man/figures/logo.svg){.absolute top="310" right="400" width="100"}

<br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>

-   Open source R (and Python) package.
-   Deploy and maintain machine learning models --\> **MLOps**
-   Provides tools to version, deploy, and monitor a trained model.

## Introduction to Pins & Plumber

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/pins.png?raw=true){.absolute top="120" right="800" width="500"}

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/plumber.png?raw=true){.absolute top="120" right="300" width="500"}

## ðŸ§° Pins

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/pins.png?raw=true){fig-align="center" width="120"}

::: incremental
-   Open source R (and Python) package.
-   Publishes data, models, and other R objects, making it easy to share them across projects and with your colleagues.
    -   {{< bi sign-turn-right-fill color=orange >}} **Interoperability --\>** You can share an object built in R with Python users (and vice versa)!
-   For our workflow:
    -   **How can we save our model so that others (or other content) can use it?**
:::

## Activity

::: {.callout-note icon="false"}
## Activity

ðŸ‘‰ Open the file `materials/activities/activity-05_TidymodelsVetiver.qmd`

**Complete Task 2 only!**
:::

## ðŸ§° Plumber

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/plumber.png?raw=true){fig-align="center" width="120"}

::: incremental
-   Open source R package.
-   Create a web Application Programming Interface (**API**) using only R code!
    -   {{< bi sign-turn-right-fill color=orange >}} **Interoperability --\>** You can interact with a Plumber API using Python (or any other language/HTTP client).
-   For our workflow:
    -   **How can we serve our model as an API?**
:::

## Activity

::: {.callout-note icon="false"}
## Activity

ðŸ‘‰ Open the file `materials/activities/activity-05_TidymodelsVetiver.qmd`

**Complete Tasks 3 & 4 only!**
:::

## Version and Monitor your models

<br>

::: incremental
-   Data changes over time
-   Models change over time
-   **How can I ensure I'm using the best model for the job?**
:::

::: fragment
::: {.callout-note icon="false"}
## Activity

ðŸ‘‰ Open the file `materials/activities/activity-05_TidymodelsVetiver.qmd`

**Complete Task 5**
:::
:::

## Food Inspections Model

Prior to this workshop:

-   An **xgboost classification model** was created using the `inspections_validated` data saved to our Postgres database

    -   `materials/project/03_model/03_model_creation.qmd`

    -   {{< bi sign-turn-right-fill color=orange >}} How to run background/workbench jobs for long running analyses!

        -   `materials/activities/activity-06_jobs.qmd`

-   If you create a model, you should create a **model card!**

    -   Check out the [model card created by our Python friends](https://connect.conf23workflows.training.posit.co/food_inspections_model_card/)!

<br>

-   **Model Goal**: *Return the likelihood that a business will fail an inspection*

## Food Inspections Model {.content-light}

::: {.callout-note icon="false"}
## Activity

ðŸ‘‰ Try interacting with the Food Inspections Model API on Posit Connect

-   <https://connect.conf23workflows.training.posit.co/food-inspections-api/>
:::

## Example Prediction

![](slide_resources/FI-api-docs-example.png){fig-align="center"}

## Review

![](slide_resources/workflow_diagram.jpg){fig-align="center"}
